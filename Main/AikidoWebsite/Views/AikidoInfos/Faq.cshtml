@model AikidoWebsite.Web.Models.FaqModel

@{
    ViewBag.Title = "Faq";
}

<h2>Aikido FAQ</h2>

<div class="btn-group" data-bind="visible: IsAdmin">
<button class="btn" data-bind="click: addEntry">Eintrag hinzufügen</button>
<button class="btn" data-bind="click: save, css: { disabled: !hasChanges() }">Speichern</button>
</div>

<br /><br />

<!-- ko foreach: Entries -->
@*<b data-bind="text: Frage, visible: !$root.IsAdmin"></b>
<input data-bind="value: Frage, visible: $root.IsAdmin" type="text" placeholder="Titel" />
<br />
<span data-bind="text: Text, visible: !$root.IsAdmin"></span>
<textarea data-bind="value: Text, visible: $root.IsAdmin" rows="5" cols="15"></textarea>
<hr />*@

<!-- ko if: $root.IsAdmin -->
<table>
    <tr>
        <td style="vertical-align: top;">
            <input data-bind="value: Frage" type="text" placeholder="Titel" />
        </td>
        <td>
            <textarea data-bind="value: Text" rows="5" style="min-width: 400px"></textarea>
        </td>
    </tr>
</table>
<!-- /ko -->

<!-- ko if: !$root.IsAdmin -->
<b data-bind="text: Frage"></b><br />
<span data-bind="text: Text"></span>
<!-- /ko -->

<hr />

<!-- /ko -->

@section Footer {
    <script type="text/javascript">
        var viewModel = new ViewModel(@Html.Raw(Json.Encode(Model)));

        function Entry(data) {
            var self = this;

            self.Id = data.Id;
            self.Frage = ko.observable(data.Frage);
            self.Text = ko.observable(data.Text);
            self.changed = ko.observable(false);

            self.Frage.subscribe(function () {  self.changed(true); });
            self.Text.subscribe(function () { self.changed(true); });
        }

        function ViewModel(model) {
            var self = this;

            self.IsAdmin = model.IsAdmin;
            self.Entries = ko.observableArray(model.Entries.map(function (entry) { return new Entry(entry); }));

            self.addEntry = function () {
                var eintrag = new Entry({ Frage: "", Text: "" });
                eintrag.changed(true);
                self.Entries.push(eintrag);
            };

            self.hasChanges = ko.computed(function () {
                return self.Entries().some(function (element) { return element.changed(); });
            });


            self.save = function () {
                if (!self.hasChanges()) {
                    return false;
                }

                $.ajax("/AikidoInfos/Faq", {
                    type: "POST",
                    data: ko.toJSON(self.Entries().filter(function (entry) { return entry.changed(); })),
                    contentType: "application/json;charset=utf8",
                    dataType: "json",
                    success: function (message, status, jqXHR) {
                        //self.Entries.removeAll();
                        //self.Entries((message.map(function (entry) { return new Entry(entry); })));

                        //alert(message.Message);
                        //window.location = "/Aktuelles";
                        window.location.reload(true);

                    },
                    error: function (jqXHR) {
                        alert("Irgendwas ist schief gegangen");
                    }
                });

            };

        };

        ko.applyBindings(viewModel);

    </script>
}