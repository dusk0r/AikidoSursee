@model AikidoWebsite.Web.Models.EditMitteilungModel
@{
    ViewBag.Title = "AddNews";
}

<h2>Mitteilung hinzufügen:</h2>

<!-- ko with: Mitteilung -->
    <div class="control-group" data-bind="css: { error: Titel().length < 1 }">
        <label class="control-label">Titel</label>
        <div class="controls">
            <input type="text" size="30" class="span10" data-bind="value: Titel, valueUpdate:'afterkeydown'" />
        </div>
    </div>
    <div class="control-group" data-bind="css: { error: Text().length < 1 }">
        <label class="control-label">Text</label>
        <div class="controls">
            <textarea class="span10" rows="10" data-bind="value: Text, valueUpdate:'afterkeydown'"></textarea>
        </div>
    </div>
    <div class="control-group">
        <label class="control-label">Publikum</label>
        <div class="controls">
            @Html.PublikumDropDown("publikum", "value: Publikum")
        </div>
    </div>
<!-- /ko -->

<div class="btn-group">
<a href="#" class="btn btn-primary" data-bind="click: save, css: { disabled: !isDirty() }">Speichern</a>
<a href="#" class="btn btn-primary" data-bind="click: discard, css: { disabled: !isDirty() }">Verwerfen</a>
    <a href="#" class="btn btn-primary" data-bind="click: remove, css: { disabled: Mitteilung().Id() === null }">Löschen</a>
</div>


@section Footer {
    <script type="text/javascript">
        var viewModel = new ViewModel();

        function Mitteilung(data) {
            var self = this;

            self.Id = ko.observable(data.Id);
            self.Titel = ko.observable(data.Titel || "");
            self.Text = ko.observable(data.Text || "");
            self.Publikum = ko.observable(data.Publikum || 1);

            //self.Titel.subscribe(function () { viewModel.isDirty(true); });
            //self.Text.subscribe(function () { viewModel.isDirty(true); });
            //self.Publikum.subscribe(function () { alert("bla"); viewModel.isDirty(true); });
        }

        function Termin() {
            var self = this;

        }

        function ViewModel() {
            var self = this;

            self.WithTermin = ko.observable(false);
            self.Mitteilung = ko.observable(new Mitteilung(@Html.Raw(Json.Encode(Model.Mitteilung))));
            self.Termin = ko.observable(new Termin(@Html.Raw(Json.Encode(Model.Termin))));
            self.isDirty = ko.observable(true);

            self.save = function () {
                $.ajax("/Aktuelles/EditNews", {
                    type: "POST",
                    data: ko.toJSON(viewModel),
                    contentType: "application/json;charset=utf8",
                    dataType: "json",
                    success: function (message, status, jqXHR) {
                        //if (self.Mitteilung().Id() === null) {
                        //    window.location = "/Aktuelles/EditNews/" + message.Id.replace("/", "_");
                        //}

                        //alert(message.Message);
                        window.location = "/Aktuelles";

                    },
                    error: function (jqXHR) {
                        alert("Irgendwas ist schief gegangen");
                    }
                });

            };

            self.discard = function () {
                window.location = "/Aktuelles";
            };

            self.remove = function () {
                if (confirm("Mitteilung löschen?")) {
                    window.location = "/Aktuelles/RemoveNews/" + self.Mitteilung().Id().replace("/", "_");
                }
            };
        }

        ko.applyBindings(viewModel);
    </script>
}
