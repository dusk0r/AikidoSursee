@model AikidoWebsite.Web.Models.ListMitteilungenModel
@{
    ViewBag.Title = "Index";
}

<h2>Neuigkeiten</h2>

<!-- ko foreach: mitteilungen -->
<div class="well">
    <span data-bind="text: titel" style="font-weight: bold;"></span>
    <!-- ko if: $root.isAdmin -->
        &nbsp;
        <button class="btn btn-mini" data-bind="click: goToEditUrl">
         <span class="icon-edit"></span>Edit
        </button>
    <!-- /ko -->
    <span class="pull-right">
        <span class="label" data-bind="text: publikumString"></span>
        <span data-bind="text: erstelltAmText"></span>


    </span>

    <div data-bind="text: text"></div>

</div>
<!-- /ko -->

Total Mitteilungen: <span data-bind="text: mitteilungenCount"></span>

<br /><br />

@if (User.IsInGroup(Gruppe.Admin)) {
    @Html.ActionLink("Neue Mitteilung hinzufügen", "AddNews", new  { @class = "btn" })
}

@section Footer {
    <script type="text/javascript">
        var viewModel = new ViewModel(@Html.Raw(Json.Encode(Model)));

        function Mitteilung(data) {
            var self = this;

            self.id = data.Id;
            self.erstelltAm = moment(data.ErstelltAm).toDate();
            self.autorName = data.AutorName;
            self.titel = data.Titel;
            self.text = data.Text;
            self.publikumString = data.PublikumString;

            self.erstelltAmText = ko.computed(function () {
                return moment(self.erstelltAm).fromNow();
            });

            self.erstelltAmDatum = ko.computed(function () {
                return moment(self.erstelltAm).format("DD.MM.YYYY HH:mm");
            });

            self.goToEditUrl = function () {
                window.location = "/Aktuelles/EditNews/" + self.id.replace("/", "_");
            };

        }

        function ViewModel(model) {
            var self = this;

            self.mitteilungen = ko.observableArray(model.Mitteilungen.map(function (value) { return new Mitteilung(value); }));
            self.start = ko.observable(model.Start);
            self.mitteilungenCount = ko.observable(model.MitteilungenCount);
            self.isAdmin = model.IsAdmin;

        }

        ko.applyBindings(viewModel);

    </script>

}