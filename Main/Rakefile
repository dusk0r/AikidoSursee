# encoding: utf-8
gem 'albacore'
gem 'rubyzip', '<1.0.0'
require 'albacore'
require 'fileutils'
require 'nokogiri'
require 'zip/zip'

base_path = File.dirname(__FILE__)
bin_path = "#{base_path}/bin/"
publish_path = "#{base_path}/publish/"
artifacts_path = "#{base_path}/artifacts/"
install_path = ENV["INSTALL_PATH"] || "C:/inetpub/wwwroot"
connection_string = ENV["CONNECTION_STRING"] || "Url=http://localhost:8080;Database=aikido-test;"

# // Funcs ///////////////////////////////////

msbuild :msbuild do |msb|
 msb.solution = "AikidoWebsite.sln"
 msb.properties(
	:configuration => :release,
	:outdir => bin_path,
	:webprojectoutputdir => publish_path,
 )
 msb.verbosity = "normal"
 msb.targets = :clean, :build
end

zip :zipartifact do |zip|
	zip.directories_to_zip publish_path
	zip.output_file = "AikidoWebsite.zip"
	zip.output_path = artifacts_path
end

def clear_directory(dir)
  Dir.foreach(dir) do |f|
    fullPath = File.join(dir, f)
	
    if f == '.' or f == '..' then next
	else FileUtils.rm_rf(fullPath)
    end
  end
end

# // Tasks //////////////////////////////////

task :default => [ :banner, :build ]

desc "Show Banner"
task :banner do
	puts ""
	puts " 888888                            8   8  8                                "               
	puts " 8    8 e  e   e  e  eeeee eeeee   8   8  8 eeee eeeee  eeeee e eeeee eeee "
	puts " 8eeee8 8  8   8  8  8   8 8  88   88  8  8 8    8   8  8     8   8   8    "
	puts " 88   8 8e 8eee8e 8e 8e  8 8   8   88  8  8 8eee 8eee8e 8eeee 8e  8e  8eee "
	puts " 88   8 88 88   8 88 88  8 8   8   88  8  8 88   88   8    88 88  88  88   "
	puts " 88   8 88 88   8 88 88ee8 8eee8   88ee8ee8 88ee 88eee8 8ee88 88  88  88ee "
	puts "___________________________________________________________________________"
end

desc "Build Website"
task :build => [ :clean, :less, :msbuild, :artifacts ]

desc "Clean Files"
task :clean do
	FileUtils.rm_rf(bin_path, secure: true)
	FileUtils.rm_rf(publish_path, secure: true)
	FileUtils.rm_rf(artifacts_path, secure: true)
end

task :artifacts do
 if (!File.directory?(artifacts_path)) 
	FileUtils.mkdir artifacts_path
 end
 
 Rake::Task[:zipartifact].invoke
 
 puts "##teamcity[publishArtifacts '#{artifacts_path}/AikidoWebsite.zip']"
end

task :install do
	app_offline_file = File.join(install_path, 'App_offline.htm')

	clear_directory File.join(install_path, '/')
	FileUtils.touch app_offline_file
	
	Zip::ZipFile.open(File.join(artifacts_path, 'AikidoWebsite.zip')) do |zip_file|
		zip_file.each do |entry|
		 path = File.join(install_path, entry.name)
		 puts "Extracting #{entry.name} to #{path}"
		 
		 FileUtils.mkdir_p(File.dirname(path))
		 zip_file.extract(entry, path)
		end
	end

	FileUtils.rm app_offline_file
end

task :patchConnectionString do
	file = File.join(install_path, "Web.config")
	
	puts "Patching #{file} Connection String: #{connection_string}"

	xml = File.open(file, 'r:UTF-8') { |f| f.read }
	xml_doc = Nokogiri::XML(xml)
	connectionStringElement = xml_doc.search("//connectionStrings/add[@name='RavenDB']")
	connectionStringElement.attribute('connectionString').value = connection_string
	File.open(file, 'w:UTF-8') { |f| f.write(xml_doc.to_xml) }
end

task :less do
	sh %{generateCss.cmd}
end